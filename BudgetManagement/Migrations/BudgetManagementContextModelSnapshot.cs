// <auto-generated />
using System;
using ApplicatonDbContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApplicatonDbContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class BudgetManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BudgetManagement.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LedgerItemID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("AccountID");

                    b.HasIndex("LedgerItemID");

                    b.HasIndex("UsersID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BudgetManagement.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LedgerItemID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCategoryBudgetID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("LedgerItemID");

                    b.HasIndex("UserCategoryBudgetID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BudgetManagement.Models.Ledger", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TransType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("Legder");
                });

            modelBuilder.Entity("BudgetManagement.Models.User", b =>
                {
                    b.Property<int>("UsersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCategoryBudgetID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsersID");

                    b.HasIndex("UserCategoryBudgetID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BudgetManagement.Models.UserCategoryBudget", b =>
                {
                    b.Property<int>("UserCategoryBudgetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("UserCategoryBudgetID");

                    b.ToTable("UserCategoryBudget");
                });

            modelBuilder.Entity("BudgetManagement.Models.Account", b =>
                {
                    b.HasOne("BudgetManagement.Models.Ledger", null)
                        .WithMany("Account")
                        .HasForeignKey("LedgerItemID");

                    b.HasOne("BudgetManagement.Models.User", null)
                        .WithMany("Accounts")
                        .HasForeignKey("UsersID");
                });

            modelBuilder.Entity("BudgetManagement.Models.Category", b =>
                {
                    b.HasOne("BudgetManagement.Models.Ledger", null)
                        .WithMany("Category")
                        .HasForeignKey("LedgerItemID");

                    b.HasOne("BudgetManagement.Models.UserCategoryBudget", null)
                        .WithMany("Category")
                        .HasForeignKey("UserCategoryBudgetID");
                });

            modelBuilder.Entity("BudgetManagement.Models.User", b =>
                {
                    b.HasOne("BudgetManagement.Models.UserCategoryBudget", null)
                        .WithMany("User")
                        .HasForeignKey("UserCategoryBudgetID");
                });
#pragma warning restore 612, 618
        }
    }
}
